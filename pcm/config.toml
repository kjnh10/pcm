template_dir = '~/.config/pcm/template'  # if this directory does not exist or not specified, default template directory will be used

[prepare]
  [prepare.custom_hook_command]
  # after = 'nvim {dirname} -c "args **/solve.cpp" -c "tab all" -c ""'

[ppp]
  [ppp.custom_hook_command]
  # after = 'nvim {dirname} -c "args **/solve.cpp" -c "tab all" -c ""'

[submit]
  [submit.default_lang.AtCoder]
  cpp = '3003' # C++14 (GCC 5.4.1)
  py = '3510'  # pypy

  [submit.default_lang.Codeforces]
  cpp = '50'  # GNU G++14 6.4.0
  py = '41'   # pypy if you prefer python3, use '31'

  [submit.language.AtCoder]
  gcc = '3003'
  clang = '3004'
  py = '3023'
  py3 = '3023'
  pypy = '3510'

  [submit.language.Codeforces]
  gcc = '50'
  clang = '52'
  py = '31'
  py3 = '31'
  pypy = '41'

[test]
  timeout_sec=2
  max_memory=256

  [test.compile_command]
  configname = 'standard_14'  # specify the profile used by default for tt and sb

  [test.compile_command.cpp]  # for tt command, you can change the compile command by --cc option. like 'pcm tt -c 1 --cc v5'
  standard_14 = """g++-9 {srcpath} -o {outpath} \
               -std=c++14 \
               -include bits/stdc++.h \
               -DPCM -Wall -fsanitize=address -fsanitize=undefined -D_GLIBCXX_DEBUG -fuse-ld=gold
            """

  debug = """g++ {srcpath} -o {outpath} \
            -std=c++14 \
             -include bits/stdc++.h \
            -DPCM -Wall -fsanitize=address -fsanitize=undefined -D_GLIBCXX_DEBUG -fuse-ld=gold \
            -g
            """

  v5 = """g++ {srcpath} -o {outpath} \
          -std=c++14 \
          -include bits/stdc++.h \
          -DPCM -Wall -fsanitize=address -fsanitize=undefined -D_GLIBCXX_DEBUG
          """

  fast = """g++ {srcpath} -o {outpath} \
          -std=c++14 \
          -include bits/stdc++.h \
          """

  clang = """clang++ {srcpath} -o {outpath} \
          -stdlib=libc++ \
          -DPCM -Wall
          """
